#!/usr/bin/env python3  

import logging
import subprocess


def main():

    executePSqlCmd("postgres","postgres","ALTER DATABASE posbuddy SET TIMEZONE TO 'Europe/Berlin'")
    # -----------------------------------------------------------------------------------------Create Databases and User
    executePSqlCmd("postgres", "postgres",
                   "CREATE USER  posbuddy  WITH PASSWORD '{{ posBuddy_database_password }}';")
    executePSqlCmd("postgres", "postgres",
                   "CREATE DATABASE posbuddy;")
    executePSqlCmd("postgres", "postgres",
                   "GRANT ALL PRIVILEGES ON DATABASE posbuddy TO posbuddy;")
    executePSqlCmd("postgres", "postgres",
                   "ALTER DATABASE posbuddy OWNER TO posbuddy;")
    # ----------------------------------------------------------------------------------------------- Create Items table
    executePSqlCmd("posbuddy", "posbuddy",
                   "create table items (" \
                   "id                varchar(10)    not null unique, " \
                   "artikel           varchar(40)    not null," \
                   "unit              varchar(20)    not null," \
                   "minAge            integer        not null," \
                   "dispensingStation varchar(10)    not null," \
                   "price             real           not null " \
                   ");                                        ")
    # ---------------------------------------------------------------------------------- Create DispensingStations table
    executePSqlCmd("posbuddy", "posbuddy",
                   "create table dispensingStations (" \
                   "id                varchar(10)    not null unique, " \
                   "name              varchar(40)    not null,        " \
                   "location          varchar(40)    not null         " \
                   ");                                                ")
    # ---------------------------------------------------------------------------------- Create identity table
    executePSqlCmd("posbuddy", "posbuddy",
                   "create table identity (" \
                   "posBuddyId        varchar(36)    not null,        " \
                   "surname           varchar(40),                    " \
                   "lastname          varchar(40),                    " \
                   "birthday          date,                           " \
                   "atribute1         varchar(40),                    " \
                   "atribute2         varchar(40),                    " \
                   "atribute3         varchar(40),                    " \
                   "startAllocation   timestamp,                      " \
                   "endAllocation     timestamp,                      " \
                   "balance           real           not null         " \
                   ");                                                ")
    # ---------------------------------------------------------------------------------- Create revenues table
    executePSqlCmd("posbuddy", "posbuddy",
                   "create table revenues (" \
                   "id                 SERIAL,                  " \
                   "posBuddyId        varchar(36)    not null , " \
                   "itemId            varchar(10)             , " \
                   "amount            int            not null , " \
                   "paymentAction     varchar(1)     not null , " \
                   "value             real           not null , " \
                   "timeOfAction      timestamp      not null   " \
                   ");                                          ")

def executePSqlCmd(database, user, psqlCommand):
    process = subprocess.Popen(
        ['docker', 'exec', 'posBuddy-database', 'psql', '-d', database, '-U', user, '-c', psqlCommand],
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE)
    logging.info("Response from ta-database:%s", process.communicate())


if __name__ == '__main__':
    logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.INFO)
    main()
